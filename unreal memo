
Super::BeingPlay();
 유니온 구조
check  ensure ,assrt

z fighting  부동소수점에의해 발생

sprite animation

메터리얼 블렌더 모드
 마스크  오파시티 마스크  나오는 기준이 일정수준일때만 그려진다.






 translucent 오파시티 비슷한데 마스크보다 선명해보임

메터리얼 라이팅 모드



비주얼 이펙트
 포스트 프로세스 블롬 :(노출값 고정) 주변 이펙트와 관계없이 일정한 빛 낼 수 있다.
 언바운드 하면 무한데 범위

빌보드(빌보드 컴포넌트) 화면을 돌려도 내가 바라보는 대상의 뱡향 일정하게 한다.
  MakeFromX X는 전방을 의미한다.

multigate

EndPlay



노말 텍스쳐는 노말을 인식하도록 되있다. 없다면 설정
프로그램마다 호환 노말이 다르다.

랜버트 코사인법칙

Power(x,2) 2제곱

//////////////////////////////////////////////////////////////////////////

world rotation, local rotation


스테틱 메시 -> 레지스터 컴포넌트  : 월드에 등록

생성자에서는 셋업 어테치먼트 ?

어테치 투 컴포넌트

keepWoeldTransform;
keepRelativetranstform;

D
  
ataAsset

언리얼 델리케이트
DECLARE_MULTICAST_DELEGATE

outer?

20240830  15 12 cloud 생성 오류 확인

//////////////////////////////////////////////////////////////////////////

라이트
 포인트 라이트
 어테뉴에이션 반경 
 감쇠

//////////////////////////////////////////////////////////////////////////

타임라인
 인스턴스 네부에서 트랙을 통해서 

//////////////////////////////////////////////////////////////////////////

오버레이 머티리얼



Fresnel

//////////////////////////////////////////////////////////////////////////

TextureCoordinate


//////////////////////////////////////////////////////////////////////////

텍스쳐
민맵?


//////////////////////////////////////////////////////////////////////////


키 리소스가 정장될려면 패키지하고나면 될수 있따.  20240906 1337
패키지 하고 디버그?

//////////////////////////////////////////////////////////////////////////
SLATE_
위젯

//////////////////////////////////////////////////////////////////////////

클래스에 스트림어블이 있으면 cpu에서 gpu로 동적할당하는 기능이 있음
//////////////////////////////////////////////////////////////////////////

UPROPERTY(Transient)는 이 속성이 세이브 게임이나 에디터에서 영구적으로 저장되지 않는다는 것을 의미합니다. 

//////////////////////////////////////////////////////////////////////////

Unreal Engine에서 Destroyed() 함수는 액터(Actor)가 게임 세계에서 파괴될 때 호출되는 함수입니다.
이 함수는 액터가 삭제되거나 파괴될 때 발생하는 이벤트 처리에 사용되며, 액터가 더 이상 존재하지 않게 될 때 특정 로직을 실행하고 싶을 때 유용합니다.

//////////////////////////////////////////////////////////////////////////

RegisterComponent() 함수는 Actor Component가 월드에서 등록되고, 활성화되며, 기능할 수 있도록 하는 중요한 메서드입니다.
이 함수는 컴포넌트가 게임 세계에 추가되었음을 엔진에 알리고, 컴포넌트가 틱(Tick), 렌더링(Rendering), 충돌(Collision) 등의 기능을 수행할 수 있도록 준비하는 역할을 합니다.

//////////////////////////////////////////////////////////////////////////

GIsEditor는 플레이 인 에디터(Play In Editor, PIE) 모드에서도 여전히 true를 반환하므로,
PIE 모드와 실제 게임 실행 여부를 구분할 때 추가적인 검사가 필요합니다.

//////////////////////////////////////////////////////////////////////////

FApp::IsGame()은 Unreal Engine에서 현재 애플리케이션이 게임으로 실행되고 있는지를 확인하는 함수입니다. 

//////////////////////////////////////////////////////////////////////////

PropertyChangedEvent.GetArrayIndex(InName);
특정 이름을 기반으로 "현재 개체"의 배열 인덱스를 가져옵니다.
	 InName - 배열 인덱스를 찾을 속성의 이름

//////////////////////////////////////////////////////////////////////////

world.h;

ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingOverride
스폰 지점에서의 충돌을 해결하는 방법. 정의되지 않음은 재정의가 없음을 의미하며 액터의 설정을 사용합니다.

ESpawnActorScaleMethod TransformScaleMethod = ESpawnActorScaleMethod::MultiplyWithRoot
제공된 생성 변환을 사용하여 루트 구성 요소를 곱할지 아니면 재정의할지 결정합니다.

ESpawnActorScaleMethod::OverrideRootScale

ESpawnActorScaleMethod::OverrideRootScale는 언리얼 엔진에서 액터의 스폰(Spawn) 시 스케일을 어떻게 처리할 것인지를 정의하는 열거형 값 중 하나입니다. 이 값은 액터를 스폰할 때, 액터의 루트 컴포넌트의 스케일을 무시하고 새로운 스케일로 덮어쓰는 방식을 의미합니다.

ESpawnActorScaleMethod 개요
ESpawnActorScaleMethod는 액터를 스폰할 때 스케일을 다루는 방법을 지정하는 열거형(Enum)입니다. 액터를 월드에 스폰할 때, 스케일이 어떻게 적용될지 결정하기 위해 이 열거형 값 중 하나를 사용합니다.

OverrideRootScale의 역할
OverrideRootScale: 액터의 루트 컴포넌트 스케일을 무시하고, 주어진 새로운 스케일로 덮어씁니다.
즉, 액터가 스폰될 때 제공된 트랜스폼 값 중 스케일을 사용하고, 루트 컴포넌트가 기존에 가지고 있는 스케일은 무시합니다.

//////////////////////////////////////////////////////////////////////////

nav mesh

//////////////////////////////////////////////////////////////////////////

porxy 대리자. 스레드 관련있음




//////////////////////////////////////////////////////////////////////////

LineTraceSingleByChannel

//////////////////////////////////////////////////////////////////////////



네비메시 바운드 볼룸  
단축키 p로 범위 확인가능 ㅇㄴ

//////////////////////////////////////////////////////////////////////////

winmerge프로그램  파일간 비교가능

//////////////////////////////////////////////////////////////////////////


레벨 스트리밍중 오버렙 이밴트 생성

//////////////////////////////////////////////////////////////////////////

충돌 메시는 네비에 충돌이 될지 안될지 정할 수있는 기능이 있음

//////////////////////////////////////////////////////////////////////////

FindNavFloorCustomSearchRadius(const FVector& TestLocation, FNavLocation& NavFloorLocation, const float CustomSearchRadius) const;

이 함수는 네비게이션 시스템에서 특정 위치 주변의 네비게이션 메시(NavMesh)를 탐색하여 바닥 위치를 찾는 데 사용됩니다.
FindNavFloorCustomSearchRadius 함수는 다음과 같은 매개변수를 받습니다:
   TestLocation: 탐색할 위치 (3D 좌표).
   NavFloorLocation: 찾은 바닥 위치를 저장할 변수 (FNavLocation 형식).
   CustomSearchRadius: 탐색 반경을 지정하는 사용자 정의 반경 값 (실수형).

이 함수는 TestLocation 주변에서 네비게이션 메시를 검색하고, 해당 위치에서 가장 가까운 바닥 위치를 찾습니다.
반환 값은 논리적인 값으로, 바닥 위치를 찾았을 경우 true를 반환하고, 그렇지 않으면 false를 반환합니다.


//////////////////////////////////////////////////////////////////////////

UNoFallCharacterMovementComponent::PhysNavWalking(float deltaTime, int32 Iterations)

함수는 캐릭터의 움직임 모드가 NavWalking일 때 호출되며, 네비게이션 메시(NavMesh) 상에서 캐릭터의 위치와 속도를 업데이트합니다.


//////////////////////////////////////////////////////////////////////////

MIN_TICK_TIME
는 게임의 틱 간격을 최소화하는 값을 정의합니다.
이 값은 게임의 프레임 속도를 제한하는 데 사용됩니다.
이 매크로는 주로 게임의 성능을 최적화하고, 프레임 속도를 일정하게 유지하기 위해 사용됩니다.
예를 들어, MIN_TICK_TIME이 0.01666초로 설정되어 있다면, 이는 게임이 초당 60프레임(60 FPS)으로 실행되도록 제한하는 것입니다.


//////////////////////////////////////////////////////////////////////////


UpdatedPrimitive는 Unreal Engine에서 캐릭터의 이동 컴포넌트가 상호작용하는 기본 충돌 컴포넌트를 나타냅니다.
이 컴포넌트는 캐릭터의 물리적 충돌과 이동을 처리하는 데 사용됩니다

//////////////////////////////////////////////////////////////////////////

FNavAgentProperties
 게임 내에서 AI 캐릭터나 다른 움직이는 요소의 동작을 관리하는 데 사용됩니다.

//////////////////////////////////////////////////////////////////////////

CharacterOwner
 이것은 게임 내 캐릭터(폰)과 관련된 정보를 담고 있는 객체입니다
Pawn 클래스의 멤버로서, 해당 폰(캐릭터)을 소유하고 있는 액터(Actor)를 가리킵니다.
CharacterOwner는 주로 캐릭터의 컨트롤러와 상호작용할 때 사용됩니다.

//////////////////////////////////////////////////////////////////////////

AddIgnoredActor
FCollisionQueryParams1 클래스의 멤버 함수입니다.
충돌 쿼리를 수행할 때, 특정 액터를 무시하고 충돌 검사를 진행할 수 있도록 합니다.
예를 들어, 라인 트레이스(line trace)나 오버랩 테스트(overlap test)를 수행할 때, 특정 액터를 충돌 검사에서 제외하고 싶을 때 이 함수를 사용합니다.

//////////////////////////////////////////////////////////////////////////

FHitResult
이것은 레이 트레이스(line trace)나 오버랩 테스트(overlap test)와 같은
충돌 검사를 수행할 때 한 번의 트레이스 결과를 담고 있는 구조체입니다.
충돌 지점: 트레이스가 어떤 지점에서 충돌했는지를 나타냅니다.
표면 법선(normal): 충돌 지점에서의 표면 법선 방향을 제공합니다.

//////////////////////////////////////////////////////////////////////////

LineTraceSingleByChannel
Start: 라인 트레이스의 시작 위치.
End: 라인 트레이스의 끝 위치.
Channel: 충돌을 검사할 채널.
OutHit: 충돌 결과를 저장할 변수.
Params: 추가적인 트레이스 매개변수.

ECC_Visibility ECC_WorldStatic (정적 월드), ECC_WorldDynamic (동적 월드),
ECC_Pawn (폰), 그리고 ECC_PhysicsBody (물리 바디) 등이 있습니다
ㅇㅀㅇ

//////////////////////////////////////////////////////////////////////////

FMath::IsNearlyEqual


//////////////////////////////////////////////////////////////////////////

abstarct 순수가상함수

//////////////////////////////////////////////////////////////////////////

UShapeComponent



















