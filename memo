
// 뭔지 모름 메모리 초과 안해준다고
ios::sync_with_stdio(false);
cin.tie(NULL);
cout.tie(NULL);


unique
지정된 범위에서 서로 옆에 있는 중복 요소를 제거합니다.
주어진 코드에서 words.erase(unique(words.begin(),words.end()),words.end()); 부분은 벡터에서 중복된 단어를 제거하는 역할을 합니다. 이 부분을 이해하려면 unique 함수와 erase 함수가 어떻게 작동하는지 이해해야 합니다.

unique 함수
unique 함수는 연속된 중복 요소를 제거하는 역할을 합니다. 정확히 말하면, 중복된 요소를 벡터의 앞쪽으로 모은 후, 새로운 끝 지점을 반환합니다. 예를 들어, 벡터가 다음과 같다고 가정해 봅시다:

css
코드 복사
["apple", "banana", "apple", "cherry", "banana"]
unique 함수를 사용하면 다음과 같이 변합니다:

css
코드 복사
["apple", "banana", "apple", "cherry", "banana"] -> ["apple", "banana", "cherry", "banana", "banana"]
그리고 새로운 끝 지점의 iterator를 반환합니다.

erase 함수
erase 함수는 벡터의 특정 범위의 요소를 제거합니다. 여기서는 unique 함수가 반환한 iterator부터 벡터의 끝까지를 제거합니다.

코드 설명
cpp
코드 복사
words.erase(unique(words.begin(),words.end()),words.end());
이 코드는 다음과 같은 과정을 거칩니다:

unique(words.begin(), words.end())는 벡터 내에서 연속된 중복 요소를 앞으로 이동시키고 새로운 끝 지점을 반환합니다.
erase 함수는 이 새로운 끝 지점부터 벡터의 실제 끝까지의 요소를 제거합니다.
따라서 전체 벡터 내에서 중복된 요소를 제거하여 유일한 요소만 남게 됩니다.

예제
벡터 words가 다음과 같다고 가정합시다:

css
코드 복사
["apple", "banana", "apple", "cherry", "banana"]
unique 함수 실행 후:

css
코드 복사
["apple", "banana", "cherry", "banana", "banana"]
erase 함수 실행 후:

css
코드 복사
["apple", "banana", "cherry"]
